{
  "$schema": "https://json.schemastore.org/eslintrc",
  "extends": [
    "next/core-web-vitals",
    "prettier",
    "plugin:tailwindcss/recommended"
  ],
  "overrides": [
    {
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:prettier/recommended"
      ],
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["tsconfig.json"]
      },
      "plugins": ["@typescript-eslint"],
      "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": [
          "warn",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/ban-ts-comment": [
          "error",
          {
            "minimumDescriptionLength": 5,
            "ts-expect-error": "allow-with-description"
          }
        ],
        "@typescript-eslint/ban-types": [
          "error",
          {
            "extendDefaults": true,
            "types": {
              "FC": "Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13",
              "FunctionComponent": "Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13",
              "React.FC": "Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13",
              "React.FunctionComponent": " Using `FC` is generally a bad idea, see here: https://medium.com/raccoons-group/why-you-probably-shouldnt-use-react-fc-to-type-your-react-components-37ca1243dd13"
            }
          }
        ],
        "@typescript-eslint/class-literal-property-style": ["error", "fields"],
        "@typescript-eslint/consistent-indexed-object-style": [
          "error",
          "record"
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "warn",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
        "@typescript-eslint/consistent-type-exports": [
          "error",
          {
            "fixMixedExportsWithInlineTypeSpecifier": true
          }
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "disallowTypeAnnotations": true,
            "prefer": "type-imports"
          }
        ],
        "@typescript-eslint/default-param-last": "warn",
        "@typescript-eslint/member-delimiter-style": [
          "warn",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/method-signature-style": ["warn", "property"],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-confusing-void-expression": [
          "error",
          {
            "ignoreArrowShorthand": true
          }
        ],
        "@typescript-eslint/no-dupe-class-members": "error",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-extra-non-null-assertion": "warn",
        "@typescript-eslint/no-extra-parens": "off",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-extraneous-class": [
          "error",
          {
            "allowWithDecorator": true
          }
        ],
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-loop-func": "error",
        "@typescript-eslint/no-loss-of-precision": "error",
        "@typescript-eslint/no-meaningless-void-operator": "error",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ],
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false
          }
        ],
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/object-curly-spacing": ["warn", "always"],
        "@typescript-eslint/prefer-as-const": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "off",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/prefer-return-this-type": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/quotes": ["warn", "single"],
        "@typescript-eslint/require-array-sort-compare": [
          "warn",
          {
            "ignoreStringArrays": true
          }
        ],
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/sort-type-constituents": "warn",
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "asyncArrow": "always",
            "named": "never"
          }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/unified-signatures": "warn",
        "array-callback-return": "error",
        "arrow-body-style": ["warn", "as-needed"],
        "block-scoped-var": "error",
        "default-case-last": "warn",
        "default-param-last": "off",
        "eqeqeq": "error",
        "func-style": [
          "error",
          "declaration",
          {
            "allowArrowFunctions": true
          }
        ],
        "import/first": "error",
        "import/newline-after-import": "warn",
        "import/no-duplicates": "error",
        "import/no-mutable-exports": "error",
        "import/no-namespace": "error",
        "import/no-useless-path-segments": [
          "error",
          {
            "noUselessIndex": true
          }
        ],
        "import/order": [
          "error",
          {
            "alphabetize": {
              "caseInsensitive": true,
              "order": "asc"
            },
            "groups": [
              "builtin",
              "external",
              "internal",
              "parent",
              "sibling",
              "unknown"
            ],
            "pathGroups": [
              {
                "group": "builtin",
                "pattern": "+(discord.js)",
                "position": "before"
              }
            ]
          }
        ],
        "lines-between-class-members": "off",
        "no-array-constructor": "off",
        "no-await-in-loop": "error",
        "no-constructor-return": "error",
        "no-dupe-class-members": "off",
        "no-duplicate-imports": "off",
        "no-empty-function": "off",
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-implied-eval": "off",
        "no-invalid-this": "off",
        "no-loop-func": "off",
        "no-loss-of-precision": "off",
        "no-magic-numbers": "off",
        "no-promise-executor-return": "error",
        "no-redeclare": "off",
        "no-restricted-syntax": [
          "error",
          {
            "message": "Don't use Enum's. Instead use `as const`.",
            "selector": "TSEnumDeclaration"
          }
        ],
        "no-return-await": "off",
        "no-self-compare": "error",
        "no-shadow": "off",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "off",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "warn",
        "no-unreachable-loop": "error",
        "no-unused-expressions": "off",
        "no-unused-private-class-members": "error",
        "no-use-before-define": "off",
        "no-useless-constructor": "off",
        "object-curly-spacing": "off",
        "quotes": "off",
        "react/display-name": "off",
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/hook-use-state": "error",
        "react/jsx-boolean-value": "warn",
        "react/jsx-curly-brace-presence": ["warn", "never"],
        "react/jsx-fragments": "warn",
        "react/jsx-handler-names": "warn",
        "react/jsx-no-comment-textnodes": "error",
        "react/jsx-no-constructed-context-values": "error",
        "react/jsx-no-useless-fragment": [
          "warn",
          {
            "allowExpressions": true
          }
        ],
        "react/jsx-pascal-case": "warn",
        "react/no-access-state-in-setstate": "error",
        "react/no-arrow-function-lifecycle": "error",
        "react/no-children-prop": "off",
        "react/no-danger": "error",
        "react/no-did-mount-set-state": "error",
        "react/no-did-update-set-state": "error",
        "react/no-namespace": "error",
        "react/no-redundant-should-component-update": "error",
        "react/no-this-in-sfc": "error",
        "react/no-unescaped-entities": "off",
        "react/no-unsafe": "error",
        "react/no-unstable-nested-components": "error",
        "react/react-in-jsx-scope": "off",
        "react/self-closing-comp": "warn",
        "require-atomic-updates": "error",
        "require-await": "off",
        "semi": "off",
        "space-before-function-paren": "off"
      }
    }
  ],
  "plugins": ["tailwindcss"],
  "root": true,
  "rules": {
    "tailwindcss/no-custom-classname": "off"
  },
  "settings": {
    "next": {
      "rootDir": ["./"]
    },
    "tailwindcss": {
      "callees": ["cn"],
      "config": "tailwind.config.js"
    }
  }
}
